«IMPORT com::btc::arch::architectureDsl»

«EXTENSION templates::Extensions»

«DEFINE main (String limitedTo) FOR Model-»
	«EXPAND main(limitedTo) FOR this.modules-»
«ENDDEFINE»

«DEFINE main (String limitedTo) FOR List[Module]-»
	«EXPAND main (limitedTo) FOREACH this-»
«ENDDEFINE»

«DEFINE main (String limitedTo) FOR Module-»
«IF this.name.contains(limitedTo)-»
«FILE this.getWindowsPath()+"\\build\\CMakeLists.txt"-»
# ------- generated by ArchitectureManagementTools -- beware that changes might be overwritten -------

# define target name
set( TARGET «this.name» )
«REM»set( TARGET ${BTC}${CAB}RTB.API )«ENDREM»

# headers
file( GLOB_RECURSE INCS ../include/*.h
«IF this.getAllDependencies().contains("libprotobuf")-»
../gen/*.h*
«ENDIF-»
)
file( GLOB_RECURSE INCS_INTERNAL ../src/*.h)

# source files 
file( GLOB_RECURSE SRCS ../src/*.cpp
«IF this.getAllDependencies().contains("libprotobuf")-»
../gen/*.c*
«ENDIF-»
)

if( MSVC )
    # other resources
    file( GLOB RESOURCE ../res/*.rc )
    file( GLOB RESOURCE_H ../res/*.h )
endif()

# summarize files
set( FILES ${INCS} ${INCS_INTERNAL} ${SRCS} ${RESOURCE} ${RESOURCE_H} )
source_group( "Internal headers" FILES ${INCS_INTERNAL} )
source_group( "Resources" FILES ${RESOURCE} ${RESOURCE_H} )

# define list of targets which have to be linked
set( LINK_TARGETS «FOREACH this.getAllDependencies() AS includedModule SEPARATOR " "-»«IF includedModule.name != "Boost"-»«includedModule.name-»«ENDIF-»
«ENDFOREACH-»)
«REM»TODO: In the non-generated files, the BTC & CAB prefixes are defined using the BTC and CAB variables. I don't know if this is essential.«ENDREM»
«REM»TODO: In the non-generated files, the version information is appended to the target names; I think this is actually used by the GridAgent; For BTC.CAB.ReleaseUnit, the name of the corresponding variable is ReleaseUnit_Version.«ENDREM»

# define list of dependent targets
set( DEP_TARGETS ${LINK_TARGETS} )
«REM»TODO: Is the TESTEE_MODULE specification obsolete? I think it was only needed for TestCocoon«ENDREM»
«IF this.type.contains(ModuleType::INTERFACE_TEST) || this.type.contains(ModuleType::IMPLEMENTATION_TEST)-»
	set( TESTEE_MODULE «FOREACH this.testedModule AS testedModule-» «testedModule.name-»
«ENDFOREACH-»)
«ENDIF-»

«IF this.getAllDependencies().exists(e|e.name.matches("Boost"))-»
add_boost_dependency()
«ENDIF-»

«REM»TODO: this must be generalized in a sensible way«ENDREM»
«IF this.getAllDependencies().contains("libprotobuf")-»
add_protobuf_dependency()
«ENDIF-»

add_definitions( -DCAB_NO_LEGACY_EXPORT_MACROS )

«IF this.customCmakeCodeBefore != null-»
«this.customCmakeCodeBefore-»
«ENDIF-»

# define complete target description
MY_TARGET( 
«IF this.type.contains(ModuleType::CONFIGURATOR)-»
EXE
«ELSEIF this.linkMode==LinkMode::DYNAMIC-»
SHARED_LIB
«ELSE-»
STATIC_LIB
«ENDIF-»
 TARGET FILES DEP_TARGETS LINK_TARGETS WARNING_LEVEL_DEFAULT COMPILE_OPTS_DEFAULT )

«IF this.customCmakeCodeAfter != null-»
«this.customCmakeCodeAfter-»
«ENDIF-»
«ENDFILE-»
«ENDIF-»
«ENDDEFINE»
