«IMPORT com::btc::arch::architectureDsl»

«EXTENSION templates::Extensions»

«DEFINE main (String limitedTo) FOR Model-»
	«EXPAND main(limitedTo) FOR this.modules»
«ENDDEFINE»

«DEFINE main (String limitedTo) FOR List[Module]-»
«EXPAND main (limitedTo) FOREACH this»
«ENDDEFINE»

«DEFINE main (String limitedTo) FOR Module»
«IF this.name.contains(limitedTo)»
«FILE this.getWindowsPath()+"\\build\\make.cmakeset"-»
# ------- generated by ArchitectureManagementTools -- beware that changes might be overwritten -------

###########################################################################
# add all targets for this build set
###########################################################################

«REM»
if ( "${BTCRTBAPI_Guard}" STREQUAL "" )
  set ( BTCRTBAPI_Guard "IN" )
«ENDREM»
if ( "${«this.name.replaceSubstring(".", "_")»_Guard}" STREQUAL "" )
  set ( «this.name.replaceSubstring(".", "_")»_Guard "IN" )
  «FOREACH this.getAllDependencies() AS includedModule-»
  	«IF includedModule.name.startsWith("BTC.CAB")-»
  	include( ${PROJECT_SOURCE_DIR}/CAB/«includedModule.name.removeCABPrefix().replaceSubstring(".", "/")»/build/make.cmakeset )
  	«ELSEIF includedModule.name != "libprotobuf" && includedModule.name != "Boost"»
	«REM»TODO: The handling of external/third-party modules must be generalized«ENDREM»
  	include( ${CMAKE_CURRENT_LIST_DIR}/../../../«includedModule.name.removeCABPrefix().addSlashAtCamelCase()»/build/make.cmakeset )
  	«ENDIF-»	
  «ENDFOREACH-»
 
  add_subdirectory( ${CMAKE_CURRENT_LIST_DIR} ${PROJECT_BINARY_DIR}/«this.getUnixPathWithoutBtcCabPrefix()» )
 
endif()


«ENDFILE-»
«ENDIF»
«ENDDEFINE»
