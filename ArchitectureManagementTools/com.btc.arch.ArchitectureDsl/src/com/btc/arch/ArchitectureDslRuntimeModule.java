/*
 * generated by Xtext
 */
package com.btc.arch;

import org.eclipse.xtext.naming.QualifiedName;

import com.btc.arch.architectureDsl.Package;
import com.btc.arch.architectureDsl.ReleaseUnit;

/**
 * Use this class to register components to be used at runtime / without the
 * Equinox extension registry.
 */
public class ArchitectureDslRuntimeModule extends
		com.btc.arch.AbstractArchitectureDslRuntimeModule {
	// public Class<? extends IResourceDescription.Manager>
	// bindIResourceDescriptionManager() {
	// return ArchDslResourceDescriptionManager.class;
	// }
	//
	// @Override
	// public Class<? extends org.eclipse.xtext.scoping.IGlobalScopeProvider>
	// bindIGlobalScopeProvider() {
	// return com.btc.arch.scoping.ArchDslGlobalScopeProvider.class;
	// }
	
	@Override
    public Class<? extends org.eclipse.xtext.naming.IQualifiedNameProvider> bindIQualifiedNameProvider() {
        return ArchitectureDslQualifiedNameProvider.class;
    }
	
	static class ArchitectureDslQualifiedNameProvider extends org.eclipse.xtext.naming.DefaultDeclarativeQualifiedNameProvider {
	    // This is necessary to be able to reference packages from other release units.
		// If this is not done, the package name is not regarded fully qualified and cannot be used outside the 
		// release unit in which the package was defined.
		String qualifiedName(Package pack) {
	        String name = pack.getName();
	        return name;
	    }
	}
}
